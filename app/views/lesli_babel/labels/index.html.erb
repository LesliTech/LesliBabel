<%
columns = [{
    label: 'ID',
    field: 'id'
}, {
    label: 'Label to translate',
    field: 'text'
}, {
    label: 'English',
    field: 'en'
}, {
    label: 'Path',
    field: 'path'
}]
%>

<%= render(LesliView::Layout::Container.new("babel-labels")) do %>

    <%= render(LesliView::Components::Header.new((@module&.code&.titleize || "Labels"))) do %>
        <%= render(LesliView::Elements::Button.new("Deploy", icon:"rocket_launch")) %>
        <% if @module %>
        <%= render(LesliView::Elements::Button.new("Add new label", icon:"add", url:new_label_path({ modules_id: @module.id }))) %>
        <% end %>
    <% end %>

    <%= render(LesliView::Components::Toolbar.new) %>

    <%= render LesliView::Elements::Table.new(columns: columns) do |table| %>
        <% @labels[:records].each do |record| %>
            <% table.with_row(css_class:"is-#{record.category}") do |row| %>
                <% row.with_cell(css_class:"has-text-centered") do %>
                    <%= turbo_link_to(record["id"], label_path(record["id"])) %>
                <% end %>
                <% row.with_cell do %>
                    <%= turbo_link_to(record["text"], label_path(record["id"])) %>
                <% end %>
                <% row.with_cell do %>
                    <%= turbo_link_to(record["en"] || "", label_path(record["id"])) %>
                <% end %>
                <% row.with_cell do %>
                    <button 
                        class="button is-primary is-inverted">
                        <span class="icon has-text-grey">
                            <span class="material-icons">
                                content_copy
                            </span>
                        </span>
                        <span>
                            <%= record["path"] %>
                        </span>
                    </button>
                <% end %>
            <% end %>
        <% end %>
    <% end %>
<% end %>
